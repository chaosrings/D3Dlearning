//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer PerObject
{
    float4x4 g_worldViewProj;           // Offset:    0, size:   64
    float4x4 g_world;                   // Offset:   64, size:   64
    float4x4 g_worldInvTranspose;       // Offset:  128, size:   64
    Material g_material;                // Offset:  192, size:   48
    float4x4 g_texTrans;                // Offset:  240, size:   64
}

cbuffer PerFrame
{
    PointLight g_pointLight;            // Offset:    0, size:   80
    float3  g_eyePos;                   // Offset:   80, size:   12
    float4  g_fogColor;                 // Offset:   96, size:   16
    float   g_fogStart;                 // Offset:  112, size:    4
    float   g_fogRange;                 // Offset:  116, size:    4
}

//
// 3 local object(s)
//
Texture2D g_tex;
SamplerState samplerTex
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
TextureCube g_cubeTex;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 5 technique(s)
    //
    technique11 NoTex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer PerObject
                // {
                //
                //   float4x4 g_worldViewProj;          // Offset:    0 Size:    64
                //   float4x4 g_world;                  // Offset:   64 Size:    64
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  192
                //       float4 diffuse;                // Offset:  208
                //       float4 specular;               // Offset:  224
                //
                //   } g_material;                      // Offset:  192 Size:    48 [unused]
                //   float4x4 g_texTrans;               // Offset:  240 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // PerObject                         cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SV_POSITION              0   xyzw        1      POS   float   xyzw
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[17], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output_siv o1.xyzw, position
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- vin.pos.x; v0.y <- vin.pos.y; v0.z <- vin.pos.z; 
                //   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; 
                //   v2.x <- vin.tex.x; v2.y <- vin.tex.y; 
                //   o3.x <- <VS return value>.tex.x; o3.y <- <VS return value>.tex.y; 
                //   o2.x <- <VS return value>.normal.x; o2.y <- <VS return value>.normal.y; o2.z <- <VS return value>.normal.z; 
                //   o1.x <- <VS return value>.posH.x; o1.y <- <VS return value>.posH.y; o1.z <- <VS return value>.posH.z; o1.w <- <VS return value>.posH.w; 
                //   o0.x <- <VS return value>.posTrans.x; o0.y <- <VS return value>.posTrans.y; o0.z <- <VS return value>.posTrans.z
                //
                #line 48 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- vout.posTrans.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- vout.posTrans.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- vout.posTrans.z
                dp4 r2.x, r0.xyzw, cb0[0].xyzw  // r2.x <- vout.posH.x
                dp4 r2.y, r0.xyzw, cb0[1].xyzw  // r2.y <- vout.posH.y
                dp4 r2.z, r0.xyzw, cb0[2].xyzw  // r2.z <- vout.posH.z
                dp4 r2.w, r0.xyzw, cb0[3].xyzw  // r2.w <- vout.posH.w
                dp3 r0.x, v1.xyzx, cb0[8].xyzx  // r0.x <- vout.normal.x
                dp3 r0.y, v1.xyzx, cb0[9].xyzx  // r0.y <- vout.normal.y
                dp3 r0.z, v1.xyzx, cb0[10].xyzx  // r0.z <- vout.normal.z
                mov r3.xy, v2.xyxx
                mov r3.zw, l(0,0,0,1.000000)
                dp4 r4.x, r3.xyzw, cb0[15].xyzw  // r4.x <- vout.tex.x
                dp4 r4.y, r3.xyzw, cb0[16].xyzw  // r4.y <- vout.tex.y
                mov o1.xyzw, r2.xyzw
                mov o0.xyz, r1.xyzx
                mov o2.xyz, r0.xyzx
                mov o3.xy, r4.xyxx
                ret 
                // Approximately 21 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer PerObject
                // {
                //
                //   float4x4 g_worldViewProj;          // Offset:    0 Size:    64 [unused]
                //   float4x4 g_world;                  // Offset:   64 Size:    64 [unused]
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  192
                //       float4 diffuse;                // Offset:  208
                //       float4 specular;               // Offset:  224
                //
                //   } g_material;                      // Offset:  192 Size:    48
                //   float4x4 g_texTrans;               // Offset:  240 Size:    64 [unused]
                //
                // }
                //
                // cbuffer PerFrame
                // {
                //
                //   struct PointLight
                //   {
                //       
                //       float4 ambient;                // Offset:    0
                //       float4 diffuse;                // Offset:   16
                //       float4 specular;               // Offset:   32
                //       float3 pos;                    // Offset:   48
                //       float range;                   // Offset:   60
                //       float3 att;                    // Offset:   64
                //       float unused;                  // Offset:   76
                //
                //   } g_pointLight;                    // Offset:    0 Size:    80
                //   float3 g_eyePos;                   // Offset:   80 Size:    12
                //   float4 g_fogColor;                 // Offset:   96 Size:    16 [unused]
                //   float g_fogStart;                  // Offset:  112 Size:     4 [unused]
                //   float g_fogRange;                  // Offset:  116 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // PerObject                         cbuffer      NA          NA    0        1
                // PerFrame                          cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SV_POSITION              0   xyzw        1      POS   float       
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[6], immediateIndexed
                dcl_input_ps linear v0.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 18
                //
                // Initial variable locations:
                //   v0.x <- pin.posTrans.x; v0.y <- pin.posTrans.y; v0.z <- pin.posTrans.z; 
                //   v1.x <- pin.posH.x; v1.y <- pin.posH.y; v1.z <- pin.posH.z; v1.w <- pin.posH.w; 
                //   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
                //   v3.x <- pin.tex.x; v3.y <- pin.tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 58 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Basic.fx"
                mov r0.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // r0.x <- texColor.x; r0.y <- texColor.y; r0.z <- texColor.z; r0.w <- texColor.w
                
                #line 65
                mov r1.xyz, -v0.xyzx
                add r1.xyz, r1.xyzx, cb1[5].xyzx  // r1.x <- toEye.x; r1.y <- toEye.y; r1.z <- toEye.z
                
                #line 71
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx
                dp3 r1.w, v2.xyzx, v2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, v2.xyzx  // r2.x <- normal.x; r2.y <- normal.y; r2.z <- normal.z
                mov r3.xyz, l(0,0,0,0)  // r3.x <- A.x; r3.y <- A.y; r3.z <- A.z
                mov r4.xyz, l(0,0,0,0)  // r4.x <- D.x; r4.y <- D.y; r4.z <- D.z
                mov r5.xyz, l(0,0,0,0)  // r5.x <- S.x; r5.y <- S.y; r5.z <- S.z
                
                #line 79
                nop 
                mov r6.xyz, cb0[12].xyzx
                mov r7.xyz, cb0[13].xyzx
                mov r8.xyzw, cb0[14].xyzw
                mov r9.xyz, cb1[0].xyzx
                mov r10.xyz, cb1[1].xyzx
                mov r11.xyz, cb1[2].xyzx
                mov r12.xyz, cb1[3].xyzx
                mov r1.w, cb1[3].w
                mov r13.xyz, cb1[4].xyzx
                mov r2.xyz, r2.xyzx
                mov r14.xyz, v0.xyzx
                mov r1.xyz, r1.xyzx
                
                #line 97 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Light.fx"
                mov r15.xyz, l(0,0,0,0)  // r15.x <- ambient.x; r15.y <- ambient.y; r15.z <- ambient.z
                mov r16.xyz, l(0,0,0,0)  // r16.x <- diffuse.x; r16.y <- diffuse.y; r16.z <- diffuse.z
                mov r17.xyz, l(0,0,0,0)  // r17.x <- specular.x; r17.y <- specular.y; r17.z <- specular.z
                
                #line 102
                mov r14.xyz, -r14.xyzx
                add r12.xyz, r12.xyzx, r14.xyzx  // r12.x <- dir.x; r12.y <- dir.y; r12.z <- dir.z
                
                #line 105
                dp3 r2.w, r12.xyzx, r12.xyzx
                sqrt r2.w, r2.w  // r2.w <- dist
                
                #line 108
                lt r1.w, r1.w, r2.w
                
                #line 112
                if_z r1.w
                  div r12.xyz, r12.xyzx, r2.wwww
                
                #line 115
                  itof r1.w, l(1)
                  mul r3.w, r2.w, r13.y
                  add r3.w, r3.w, r13.x
                  mul r4.w, r2.w, r13.z
                  mul r2.w, r2.w, r4.w
                  add r2.w, r2.w, r3.w
                  div r1.w, r1.w, r2.w  // r1.w <- att
                
                #line 118
                  mul r6.xyz, r6.xyzx, r9.xyzx
                  mul r15.xyz, r1.wwww, r6.xyzx
                
                #line 121
                  dp3 r2.w, r12.xyzx, r2.xyzx  // r2.w <- diffFactor
                
                #line 124
                  itof r3.w, l(0)
                  lt r3.w, r3.w, r2.w
                  if_nz r3.w
                
                #line 127
                    mul r6.xyz, r7.xyzx, r10.xyzx
                    mul r6.xyz, r2.wwww, r6.xyzx
                    mul r16.xyz, r1.wwww, r6.xyzx
                    mov r6.xyz, -r12.xyzx
                    dp3 r2.w, r6.xyzx, r2.xyzx
                    add r2.w, r2.w, r2.w
                    mov r2.w, -r2.w
                    mul r2.xyz, r2.wwww, r2.xyzx
                    add r2.xyz, r6.xyzx, r2.xyzx  // r2.x <- refLight.x; r2.y <- refLight.y; r2.z <- refLight.z
                    dp3 r1.x, r2.xyzx, r1.xyzx
                    max r1.x, r1.x, l(0.000000)
                    log r1.x, r1.x
                    mul r1.x, r1.x, r8.w
                    exp r1.x, r1.x  // r1.x <- specFactor
                
                #line 134
                    mul r2.xyz, r8.xyzx, r11.xyzx
                    mul r1.xyz, r1.xxxx, r2.xyzx
                    mul r17.xyz, r1.wwww, r1.xyzx
                  endif 
                endif 
                
                #line 79 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Basic.fx"
                mov r15.xyz, r15.xyzx  // r15.x <- ambient.x; r15.y <- ambient.y; r15.z <- ambient.z
                mov r16.xyz, r16.xyzx  // r16.x <- diff.x; r16.y <- diff.y; r16.z <- diff.z
                mov r17.xyz, r17.xyzx  // r17.x <- spec.x; r17.y <- spec.y; r17.z <- spec.z
                add r1.xyz, r3.xyzx, r15.xyzx  // r1.x <- A.x; r1.y <- A.y; r1.z <- A.z
                add r2.xyz, r4.xyzx, r16.xyzx  // r2.x <- D.x; r2.y <- D.y; r2.z <- D.z
                add r3.xyz, r5.xyzx, r17.xyzx  // r3.x <- S.x; r3.y <- S.y; r3.z <- S.z
                
                #line 90
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, r1.xyzx
                add r0.xyz, r3.xyzx, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                mul r0.w, r0.w, cb0[13].w  // r0.w <- litColor.w
                
                #line 103
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 80 instruction slots used
                            
            };
        }

    }

    technique11 NoLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer PerObject
                // {
                //
                //   float4x4 g_worldViewProj;          // Offset:    0 Size:    64
                //   float4x4 g_world;                  // Offset:   64 Size:    64
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  192
                //       float4 diffuse;                // Offset:  208
                //       float4 specular;               // Offset:  224
                //
                //   } g_material;                      // Offset:  192 Size:    48 [unused]
                //   float4x4 g_texTrans;               // Offset:  240 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // PerObject                         cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SV_POSITION              0   xyzw        1      POS   float   xyzw
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[17], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output_siv o1.xyzw, position
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- vin.pos.x; v0.y <- vin.pos.y; v0.z <- vin.pos.z; 
                //   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; 
                //   v2.x <- vin.tex.x; v2.y <- vin.tex.y; 
                //   o3.x <- <VS return value>.tex.x; o3.y <- <VS return value>.tex.y; 
                //   o2.x <- <VS return value>.normal.x; o2.y <- <VS return value>.normal.y; o2.z <- <VS return value>.normal.z; 
                //   o1.x <- <VS return value>.posH.x; o1.y <- <VS return value>.posH.y; o1.z <- <VS return value>.posH.z; o1.w <- <VS return value>.posH.w; 
                //   o0.x <- <VS return value>.posTrans.x; o0.y <- <VS return value>.posTrans.y; o0.z <- <VS return value>.posTrans.z
                //
                #line 48 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- vout.posTrans.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- vout.posTrans.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- vout.posTrans.z
                dp4 r2.x, r0.xyzw, cb0[0].xyzw  // r2.x <- vout.posH.x
                dp4 r2.y, r0.xyzw, cb0[1].xyzw  // r2.y <- vout.posH.y
                dp4 r2.z, r0.xyzw, cb0[2].xyzw  // r2.z <- vout.posH.z
                dp4 r2.w, r0.xyzw, cb0[3].xyzw  // r2.w <- vout.posH.w
                dp3 r0.x, v1.xyzx, cb0[8].xyzx  // r0.x <- vout.normal.x
                dp3 r0.y, v1.xyzx, cb0[9].xyzx  // r0.y <- vout.normal.y
                dp3 r0.z, v1.xyzx, cb0[10].xyzx  // r0.z <- vout.normal.z
                mov r3.xy, v2.xyxx
                mov r3.zw, l(0,0,0,1.000000)
                dp4 r4.x, r3.xyzw, cb0[15].xyzw  // r4.x <- vout.tex.x
                dp4 r4.y, r3.xyzw, cb0[16].xyzw  // r4.y <- vout.tex.y
                mov o1.xyzw, r2.xyzw
                mov o0.xyz, r1.xyzx
                mov o2.xyz, r0.xyzx
                mov o3.xy, r4.xyxx
                ret 
                // Approximately 21 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer PerObject
                // {
                //
                //   float4x4 g_worldViewProj;          // Offset:    0 Size:    64 [unused]
                //   float4x4 g_world;                  // Offset:   64 Size:    64 [unused]
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  192
                //       float4 diffuse;                // Offset:  208
                //       float4 specular;               // Offset:  224
                //
                //   } g_material;                      // Offset:  192 Size:    48
                //   float4x4 g_texTrans;               // Offset:  240 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samplerTex                        sampler      NA          NA    0        1
                // g_tex                             texture  float4          2d    0        1
                // PerObject                         cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float       
                // SV_POSITION              0   xyzw        1      POS   float       
                // NORMAL                   0   xyz         2     NONE   float       
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- pin.posTrans.x; v0.y <- pin.posTrans.y; v0.z <- pin.posTrans.z; 
                //   v1.x <- pin.posH.x; v1.y <- pin.posH.y; v1.z <- pin.posH.z; v1.w <- pin.posH.w; 
                //   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
                //   v3.x <- pin.tex.x; v3.y <- pin.tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 62 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // r0.x <- texColor.x; r0.y <- texColor.y; r0.z <- texColor.z; r0.w <- texColor.w
                
                #line 86
                mov r1.xyz, cb0[12].xyzx  // r1.x <- A.x; r1.y <- A.y; r1.z <- A.z
                mov r2.xyz, cb0[13].xyzx  // r2.x <- D.x; r2.y <- D.y; r2.z <- D.z
                mov r3.xyz, cb0[14].xyzx  // r3.x <- S.x; r3.y <- S.y; r3.z <- S.z
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, r1.xyzx
                add r0.xyz, r3.xyzx, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                mul r0.w, r0.w, cb0[13].w  // r0.w <- litColor.w
                
                #line 103
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 11 instruction slots used
                            
            };
        }

    }

    technique11 TexLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer PerObject
                // {
                //
                //   float4x4 g_worldViewProj;          // Offset:    0 Size:    64
                //   float4x4 g_world;                  // Offset:   64 Size:    64
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  192
                //       float4 diffuse;                // Offset:  208
                //       float4 specular;               // Offset:  224
                //
                //   } g_material;                      // Offset:  192 Size:    48 [unused]
                //   float4x4 g_texTrans;               // Offset:  240 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // PerObject                         cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SV_POSITION              0   xyzw        1      POS   float   xyzw
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[17], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output_siv o1.xyzw, position
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- vin.pos.x; v0.y <- vin.pos.y; v0.z <- vin.pos.z; 
                //   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; 
                //   v2.x <- vin.tex.x; v2.y <- vin.tex.y; 
                //   o3.x <- <VS return value>.tex.x; o3.y <- <VS return value>.tex.y; 
                //   o2.x <- <VS return value>.normal.x; o2.y <- <VS return value>.normal.y; o2.z <- <VS return value>.normal.z; 
                //   o1.x <- <VS return value>.posH.x; o1.y <- <VS return value>.posH.y; o1.z <- <VS return value>.posH.z; o1.w <- <VS return value>.posH.w; 
                //   o0.x <- <VS return value>.posTrans.x; o0.y <- <VS return value>.posTrans.y; o0.z <- <VS return value>.posTrans.z
                //
                #line 48 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- vout.posTrans.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- vout.posTrans.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- vout.posTrans.z
                dp4 r2.x, r0.xyzw, cb0[0].xyzw  // r2.x <- vout.posH.x
                dp4 r2.y, r0.xyzw, cb0[1].xyzw  // r2.y <- vout.posH.y
                dp4 r2.z, r0.xyzw, cb0[2].xyzw  // r2.z <- vout.posH.z
                dp4 r2.w, r0.xyzw, cb0[3].xyzw  // r2.w <- vout.posH.w
                dp3 r0.x, v1.xyzx, cb0[8].xyzx  // r0.x <- vout.normal.x
                dp3 r0.y, v1.xyzx, cb0[9].xyzx  // r0.y <- vout.normal.y
                dp3 r0.z, v1.xyzx, cb0[10].xyzx  // r0.z <- vout.normal.z
                mov r3.xy, v2.xyxx
                mov r3.zw, l(0,0,0,1.000000)
                dp4 r4.x, r3.xyzw, cb0[15].xyzw  // r4.x <- vout.tex.x
                dp4 r4.y, r3.xyzw, cb0[16].xyzw  // r4.y <- vout.tex.y
                mov o1.xyzw, r2.xyzw
                mov o0.xyz, r1.xyzx
                mov o2.xyz, r0.xyzx
                mov o3.xy, r4.xyxx
                ret 
                // Approximately 21 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer PerObject
                // {
                //
                //   float4x4 g_worldViewProj;          // Offset:    0 Size:    64 [unused]
                //   float4x4 g_world;                  // Offset:   64 Size:    64 [unused]
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  192
                //       float4 diffuse;                // Offset:  208
                //       float4 specular;               // Offset:  224
                //
                //   } g_material;                      // Offset:  192 Size:    48
                //   float4x4 g_texTrans;               // Offset:  240 Size:    64 [unused]
                //
                // }
                //
                // cbuffer PerFrame
                // {
                //
                //   struct PointLight
                //   {
                //       
                //       float4 ambient;                // Offset:    0
                //       float4 diffuse;                // Offset:   16
                //       float4 specular;               // Offset:   32
                //       float3 pos;                    // Offset:   48
                //       float range;                   // Offset:   60
                //       float3 att;                    // Offset:   64
                //       float unused;                  // Offset:   76
                //
                //   } g_pointLight;                    // Offset:    0 Size:    80
                //   float3 g_eyePos;                   // Offset:   80 Size:    12
                //   float4 g_fogColor;                 // Offset:   96 Size:    16 [unused]
                //   float g_fogStart;                  // Offset:  112 Size:     4 [unused]
                //   float g_fogRange;                  // Offset:  116 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samplerTex                        sampler      NA          NA    0        1
                // g_tex                             texture  float4          2d    0        1
                // PerObject                         cbuffer      NA          NA    0        1
                // PerFrame                          cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SV_POSITION              0   xyzw        1      POS   float       
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[6], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v0.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 18
                //
                // Initial variable locations:
                //   v0.x <- pin.posTrans.x; v0.y <- pin.posTrans.y; v0.z <- pin.posTrans.z; 
                //   v1.x <- pin.posH.x; v1.y <- pin.posH.y; v1.z <- pin.posH.z; v1.w <- pin.posH.w; 
                //   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
                //   v3.x <- pin.tex.x; v3.y <- pin.tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 62 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // r0.x <- texColor.x; r0.y <- texColor.y; r0.z <- texColor.z; r0.w <- texColor.w
                
                #line 65
                mov r1.xyz, -v0.xyzx
                add r1.xyz, r1.xyzx, cb1[5].xyzx  // r1.x <- toEye.x; r1.y <- toEye.y; r1.z <- toEye.z
                
                #line 71
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx
                dp3 r1.w, v2.xyzx, v2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, v2.xyzx  // r2.x <- normal.x; r2.y <- normal.y; r2.z <- normal.z
                mov r3.xyz, l(0,0,0,0)  // r3.x <- A.x; r3.y <- A.y; r3.z <- A.z
                mov r4.xyz, l(0,0,0,0)  // r4.x <- D.x; r4.y <- D.y; r4.z <- D.z
                mov r5.xyz, l(0,0,0,0)  // r5.x <- S.x; r5.y <- S.y; r5.z <- S.z
                
                #line 79
                nop 
                mov r6.xyz, cb0[12].xyzx
                mov r7.xyz, cb0[13].xyzx
                mov r8.xyzw, cb0[14].xyzw
                mov r9.xyz, cb1[0].xyzx
                mov r10.xyz, cb1[1].xyzx
                mov r11.xyz, cb1[2].xyzx
                mov r12.xyz, cb1[3].xyzx
                mov r1.w, cb1[3].w
                mov r13.xyz, cb1[4].xyzx
                mov r2.xyz, r2.xyzx
                mov r14.xyz, v0.xyzx
                mov r1.xyz, r1.xyzx
                
                #line 97 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Light.fx"
                mov r15.xyz, l(0,0,0,0)  // r15.x <- ambient.x; r15.y <- ambient.y; r15.z <- ambient.z
                mov r16.xyz, l(0,0,0,0)  // r16.x <- diffuse.x; r16.y <- diffuse.y; r16.z <- diffuse.z
                mov r17.xyz, l(0,0,0,0)  // r17.x <- specular.x; r17.y <- specular.y; r17.z <- specular.z
                
                #line 102
                mov r14.xyz, -r14.xyzx
                add r12.xyz, r12.xyzx, r14.xyzx  // r12.x <- dir.x; r12.y <- dir.y; r12.z <- dir.z
                
                #line 105
                dp3 r2.w, r12.xyzx, r12.xyzx
                sqrt r2.w, r2.w  // r2.w <- dist
                
                #line 108
                lt r1.w, r1.w, r2.w
                
                #line 112
                if_z r1.w
                  div r12.xyz, r12.xyzx, r2.wwww
                
                #line 115
                  itof r1.w, l(1)
                  mul r3.w, r2.w, r13.y
                  add r3.w, r3.w, r13.x
                  mul r4.w, r2.w, r13.z
                  mul r2.w, r2.w, r4.w
                  add r2.w, r2.w, r3.w
                  div r1.w, r1.w, r2.w  // r1.w <- att
                
                #line 118
                  mul r6.xyz, r6.xyzx, r9.xyzx
                  mul r15.xyz, r1.wwww, r6.xyzx
                
                #line 121
                  dp3 r2.w, r12.xyzx, r2.xyzx  // r2.w <- diffFactor
                
                #line 124
                  itof r3.w, l(0)
                  lt r3.w, r3.w, r2.w
                  if_nz r3.w
                
                #line 127
                    mul r6.xyz, r7.xyzx, r10.xyzx
                    mul r6.xyz, r2.wwww, r6.xyzx
                    mul r16.xyz, r1.wwww, r6.xyzx
                    mov r6.xyz, -r12.xyzx
                    dp3 r2.w, r6.xyzx, r2.xyzx
                    add r2.w, r2.w, r2.w
                    mov r2.w, -r2.w
                    mul r2.xyz, r2.wwww, r2.xyzx
                    add r2.xyz, r6.xyzx, r2.xyzx  // r2.x <- refLight.x; r2.y <- refLight.y; r2.z <- refLight.z
                    dp3 r1.x, r2.xyzx, r1.xyzx
                    max r1.x, r1.x, l(0.000000)
                    log r1.x, r1.x
                    mul r1.x, r1.x, r8.w
                    exp r1.x, r1.x  // r1.x <- specFactor
                
                #line 134
                    mul r2.xyz, r8.xyzx, r11.xyzx
                    mul r1.xyz, r1.xxxx, r2.xyzx
                    mul r17.xyz, r1.wwww, r1.xyzx
                  endif 
                endif 
                
                #line 79 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Basic.fx"
                mov r15.xyz, r15.xyzx  // r15.x <- ambient.x; r15.y <- ambient.y; r15.z <- ambient.z
                mov r16.xyz, r16.xyzx  // r16.x <- diff.x; r16.y <- diff.y; r16.z <- diff.z
                mov r17.xyz, r17.xyzx  // r17.x <- spec.x; r17.y <- spec.y; r17.z <- spec.z
                add r1.xyz, r3.xyzx, r15.xyzx  // r1.x <- A.x; r1.y <- A.y; r1.z <- A.z
                add r2.xyz, r4.xyzx, r16.xyzx  // r2.x <- D.x; r2.y <- D.y; r2.z <- D.z
                add r3.xyz, r5.xyzx, r17.xyzx  // r3.x <- S.x; r3.y <- S.y; r3.z <- S.z
                
                #line 90
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, r1.xyzx
                add r0.xyz, r3.xyzx, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                mul r0.w, r0.w, cb0[13].w  // r0.w <- litColor.w
                
                #line 103
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 80 instruction slots used
                            
            };
        }

    }

    technique11 TexLightFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer PerObject
                // {
                //
                //   float4x4 g_worldViewProj;          // Offset:    0 Size:    64
                //   float4x4 g_world;                  // Offset:   64 Size:    64
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  192
                //       float4 diffuse;                // Offset:  208
                //       float4 specular;               // Offset:  224
                //
                //   } g_material;                      // Offset:  192 Size:    48 [unused]
                //   float4x4 g_texTrans;               // Offset:  240 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // PerObject                         cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SV_POSITION              0   xyzw        1      POS   float   xyzw
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[17], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output_siv o1.xyzw, position
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- vin.pos.x; v0.y <- vin.pos.y; v0.z <- vin.pos.z; 
                //   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; 
                //   v2.x <- vin.tex.x; v2.y <- vin.tex.y; 
                //   o3.x <- <VS return value>.tex.x; o3.y <- <VS return value>.tex.y; 
                //   o2.x <- <VS return value>.normal.x; o2.y <- <VS return value>.normal.y; o2.z <- <VS return value>.normal.z; 
                //   o1.x <- <VS return value>.posH.x; o1.y <- <VS return value>.posH.y; o1.z <- <VS return value>.posH.z; o1.w <- <VS return value>.posH.w; 
                //   o0.x <- <VS return value>.posTrans.x; o0.y <- <VS return value>.posTrans.y; o0.z <- <VS return value>.posTrans.z
                //
                #line 48 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- vout.posTrans.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- vout.posTrans.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- vout.posTrans.z
                dp4 r2.x, r0.xyzw, cb0[0].xyzw  // r2.x <- vout.posH.x
                dp4 r2.y, r0.xyzw, cb0[1].xyzw  // r2.y <- vout.posH.y
                dp4 r2.z, r0.xyzw, cb0[2].xyzw  // r2.z <- vout.posH.z
                dp4 r2.w, r0.xyzw, cb0[3].xyzw  // r2.w <- vout.posH.w
                dp3 r0.x, v1.xyzx, cb0[8].xyzx  // r0.x <- vout.normal.x
                dp3 r0.y, v1.xyzx, cb0[9].xyzx  // r0.y <- vout.normal.y
                dp3 r0.z, v1.xyzx, cb0[10].xyzx  // r0.z <- vout.normal.z
                mov r3.xy, v2.xyxx
                mov r3.zw, l(0,0,0,1.000000)
                dp4 r4.x, r3.xyzw, cb0[15].xyzw  // r4.x <- vout.tex.x
                dp4 r4.y, r3.xyzw, cb0[16].xyzw  // r4.y <- vout.tex.y
                mov o1.xyzw, r2.xyzw
                mov o0.xyz, r1.xyzx
                mov o2.xyz, r0.xyzx
                mov o3.xy, r4.xyxx
                ret 
                // Approximately 21 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer PerObject
                // {
                //
                //   float4x4 g_worldViewProj;          // Offset:    0 Size:    64 [unused]
                //   float4x4 g_world;                  // Offset:   64 Size:    64 [unused]
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  192
                //       float4 diffuse;                // Offset:  208
                //       float4 specular;               // Offset:  224
                //
                //   } g_material;                      // Offset:  192 Size:    48
                //   float4x4 g_texTrans;               // Offset:  240 Size:    64 [unused]
                //
                // }
                //
                // cbuffer PerFrame
                // {
                //
                //   struct PointLight
                //   {
                //       
                //       float4 ambient;                // Offset:    0
                //       float4 diffuse;                // Offset:   16
                //       float4 specular;               // Offset:   32
                //       float3 pos;                    // Offset:   48
                //       float range;                   // Offset:   60
                //       float3 att;                    // Offset:   64
                //       float unused;                  // Offset:   76
                //
                //   } g_pointLight;                    // Offset:    0 Size:    80
                //   float3 g_eyePos;                   // Offset:   80 Size:    12
                //   float4 g_fogColor;                 // Offset:   96 Size:    16
                //   float g_fogStart;                  // Offset:  112 Size:     4
                //   float g_fogRange;                  // Offset:  116 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samplerTex                        sampler      NA          NA    0        1
                // g_tex                             texture  float4          2d    0        1
                // PerObject                         cbuffer      NA          NA    0        1
                // PerFrame                          cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SV_POSITION              0   xyzw        1      POS   float       
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[8], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v0.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 18
                //
                // Initial variable locations:
                //   v0.x <- pin.posTrans.x; v0.y <- pin.posTrans.y; v0.z <- pin.posTrans.z; 
                //   v1.x <- pin.posH.x; v1.y <- pin.posH.y; v1.z <- pin.posH.z; v1.w <- pin.posH.w; 
                //   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
                //   v3.x <- pin.tex.x; v3.y <- pin.tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 62 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // r0.x <- texColor.x; r0.y <- texColor.y; r0.z <- texColor.z; r0.w <- texColor.w
                
                #line 65
                mov r1.xyz, -v0.xyzx
                add r1.xyz, r1.xyzx, cb1[5].xyzx  // r1.x <- toEye.x; r1.y <- toEye.y; r1.z <- toEye.z
                dp3 r1.w, r1.xyzx, r1.xyzx
                sqrt r1.w, r1.w  // r1.w <- dist
                
                #line 69
                add r2.x, cb1[7].y, cb1[7].x
                mov r2.y, -r1.w
                add r2.x, r2.y, r2.x
                lt r2.x, r2.x, l(0.000000)
                and r2.x, r2.x, l(-1)
                discard_nz r2.x
                dp3 r2.x, r1.xyzx, r1.xyzx
                rsq r2.x, r2.x
                mul r1.xyz, r1.xyzx, r2.xxxx
                dp3 r2.x, v2.xyzx, v2.xyzx
                rsq r2.x, r2.x
                mul r2.xyz, r2.xxxx, v2.xyzx  // r2.x <- normal.x; r2.y <- normal.y; r2.z <- normal.z
                mov r3.xyz, l(0,0,0,0)  // r3.x <- A.x; r3.y <- A.y; r3.z <- A.z
                mov r4.xyz, l(0,0,0,0)  // r4.x <- D.x; r4.y <- D.y; r4.z <- D.z
                mov r5.xyz, l(0,0,0,0)  // r5.x <- S.x; r5.y <- S.y; r5.z <- S.z
                
                #line 79
                nop 
                mov r6.xyz, cb0[12].xyzx
                mov r7.xyz, cb0[13].xyzx
                mov r8.xyzw, cb0[14].xyzw
                mov r9.xyz, cb1[0].xyzx
                mov r10.xyz, cb1[1].xyzx
                mov r11.xyz, cb1[2].xyzx
                mov r12.xyz, cb1[3].xyzx
                mov r2.w, cb1[3].w
                mov r13.xyz, cb1[4].xyzx
                mov r2.xyz, r2.xyzx
                mov r14.xyz, v0.xyzx
                mov r1.xyz, r1.xyzx
                
                #line 97 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Light.fx"
                mov r15.xyz, l(0,0,0,0)  // r15.x <- ambient.x; r15.y <- ambient.y; r15.z <- ambient.z
                mov r16.xyz, l(0,0,0,0)  // r16.x <- diffuse.x; r16.y <- diffuse.y; r16.z <- diffuse.z
                mov r17.xyz, l(0,0,0,0)  // r17.x <- specular.x; r17.y <- specular.y; r17.z <- specular.z
                
                #line 102
                mov r14.xyz, -r14.xyzx
                add r12.xyz, r12.xyzx, r14.xyzx  // r12.x <- dir.x; r12.y <- dir.y; r12.z <- dir.z
                
                #line 105
                dp3 r3.w, r12.xyzx, r12.xyzx
                sqrt r3.w, r3.w  // r3.w <- dist
                
                #line 108
                lt r2.w, r2.w, r3.w
                
                #line 112
                if_z r2.w
                  div r12.xyz, r12.xyzx, r3.wwww
                
                #line 115
                  itof r2.w, l(1)
                  mul r4.w, r3.w, r13.y
                  add r4.w, r4.w, r13.x
                  mul r5.w, r3.w, r13.z
                  mul r3.w, r3.w, r5.w
                  add r3.w, r3.w, r4.w
                  div r2.w, r2.w, r3.w  // r2.w <- att
                
                #line 118
                  mul r6.xyz, r6.xyzx, r9.xyzx
                  mul r15.xyz, r2.wwww, r6.xyzx
                
                #line 121
                  dp3 r3.w, r12.xyzx, r2.xyzx  // r3.w <- diffFactor
                
                #line 124
                  itof r4.w, l(0)
                  lt r4.w, r4.w, r3.w
                  if_nz r4.w
                
                #line 127
                    mul r6.xyz, r7.xyzx, r10.xyzx
                    mul r6.xyz, r3.wwww, r6.xyzx
                    mul r16.xyz, r2.wwww, r6.xyzx
                    mov r6.xyz, -r12.xyzx
                    dp3 r3.w, r6.xyzx, r2.xyzx
                    add r3.w, r3.w, r3.w
                    mov r3.w, -r3.w
                    mul r2.xyz, r2.xyzx, r3.wwww
                    add r2.xyz, r6.xyzx, r2.xyzx  // r2.x <- refLight.x; r2.y <- refLight.y; r2.z <- refLight.z
                    dp3 r1.x, r2.xyzx, r1.xyzx
                    max r1.x, r1.x, l(0.000000)
                    log r1.x, r1.x
                    mul r1.x, r1.x, r8.w
                    exp r1.x, r1.x  // r1.x <- specFactor
                
                #line 134
                    mul r2.xyz, r8.xyzx, r11.xyzx
                    mul r1.xyz, r1.xxxx, r2.xyzx
                    mul r17.xyz, r2.wwww, r1.xyzx
                  endif 
                endif 
                
                #line 79 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Basic.fx"
                mov r15.xyz, r15.xyzx  // r15.x <- ambient.x; r15.y <- ambient.y; r15.z <- ambient.z
                mov r16.xyz, r16.xyzx  // r16.x <- diff.x; r16.y <- diff.y; r16.z <- diff.z
                mov r17.xyz, r17.xyzx  // r17.x <- spec.x; r17.y <- spec.y; r17.z <- spec.z
                add r1.xyz, r3.xyzx, r15.xyzx  // r1.x <- A.x; r1.y <- A.y; r1.z <- A.z
                add r2.xyz, r4.xyzx, r16.xyzx  // r2.x <- D.x; r2.y <- D.y; r2.z <- D.z
                add r3.xyz, r5.xyzx, r17.xyzx  // r3.x <- S.x; r3.y <- S.y; r3.z <- S.z
                
                #line 90
                add r1.xyz, r1.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, r1.xyzx
                add r2.xyz, r3.xyzx, r0.xyzx  // r2.x <- litColor.x; r2.y <- litColor.y; r2.z <- litColor.z
                mul r2.w, r0.w, cb0[13].w  // r2.w <- litColor.w
                
                #line 94
                mov r0.x, -cb1[7].x
                add r0.x, r0.x, r1.w
                div r0.x, r0.x, cb1[7].y
                max r0.x, r0.x, l(0.000000)
                min r0.x, r0.x, l(1.000000)  // r0.x <- fogFactor
                mov r1.xyzw, -r2.xyzw
                add r1.xyzw, r1.xyzw, cb1[6].xyzw
                mul r0.xyzw, r0.xxxx, r1.xyzw
                add r0.xyzw, r0.xyzw, r2.xyzw  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z; r0.w <- litColor.w
                
                #line 103
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 96 instruction slots used
                            
            };
        }

    }

    technique11 CubeTexLight
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer PerObject
                // {
                //
                //   float4x4 g_worldViewProj;          // Offset:    0 Size:    64
                //   float4x4 g_world;                  // Offset:   64 Size:    64
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  192
                //       float4 diffuse;                // Offset:  208
                //       float4 specular;               // Offset:  224
                //
                //   } g_material;                      // Offset:  192 Size:    48 [unused]
                //   float4x4 g_texTrans;               // Offset:  240 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // PerObject                         cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SV_POSITION              0   xyzw        1      POS   float   xyzw
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[17], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output_siv o1.xyzw, position
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                //
                // Initial variable locations:
                //   v0.x <- vin.pos.x; v0.y <- vin.pos.y; v0.z <- vin.pos.z; 
                //   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; 
                //   v2.x <- vin.tex.x; v2.y <- vin.tex.y; 
                //   o3.x <- <VS return value>.tex.x; o3.y <- <VS return value>.tex.y; 
                //   o2.x <- <VS return value>.normal.x; o2.y <- <VS return value>.normal.y; o2.z <- <VS return value>.normal.z; 
                //   o1.x <- <VS return value>.posH.x; o1.y <- <VS return value>.posH.y; o1.z <- <VS return value>.posH.z; o1.w <- <VS return value>.posH.w; 
                //   o0.x <- <VS return value>.posTrans.x; o0.y <- <VS return value>.posTrans.y; o0.z <- <VS return value>.posTrans.z
                //
                #line 48 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- vout.posTrans.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- vout.posTrans.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- vout.posTrans.z
                dp4 r2.x, r0.xyzw, cb0[0].xyzw  // r2.x <- vout.posH.x
                dp4 r2.y, r0.xyzw, cb0[1].xyzw  // r2.y <- vout.posH.y
                dp4 r2.z, r0.xyzw, cb0[2].xyzw  // r2.z <- vout.posH.z
                dp4 r2.w, r0.xyzw, cb0[3].xyzw  // r2.w <- vout.posH.w
                dp3 r0.x, v1.xyzx, cb0[8].xyzx  // r0.x <- vout.normal.x
                dp3 r0.y, v1.xyzx, cb0[9].xyzx  // r0.y <- vout.normal.y
                dp3 r0.z, v1.xyzx, cb0[10].xyzx  // r0.z <- vout.normal.z
                mov r3.xy, v2.xyxx
                mov r3.zw, l(0,0,0,1.000000)
                dp4 r4.x, r3.xyzw, cb0[15].xyzw  // r4.x <- vout.tex.x
                dp4 r4.y, r3.xyzw, cb0[16].xyzw  // r4.y <- vout.tex.y
                mov o1.xyzw, r2.xyzw
                mov o0.xyz, r1.xyzx
                mov o2.xyz, r0.xyzx
                mov o3.xy, r4.xyxx
                ret 
                // Approximately 21 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer PerObject
                // {
                //
                //   float4x4 g_worldViewProj;          // Offset:    0 Size:    64 [unused]
                //   float4x4 g_world;                  // Offset:   64 Size:    64 [unused]
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  192
                //       float4 diffuse;                // Offset:  208
                //       float4 specular;               // Offset:  224
                //
                //   } g_material;                      // Offset:  192 Size:    48
                //   float4x4 g_texTrans;               // Offset:  240 Size:    64 [unused]
                //
                // }
                //
                // cbuffer PerFrame
                // {
                //
                //   struct PointLight
                //   {
                //       
                //       float4 ambient;                // Offset:    0
                //       float4 diffuse;                // Offset:   16
                //       float4 specular;               // Offset:   32
                //       float3 pos;                    // Offset:   48
                //       float range;                   // Offset:   60
                //       float3 att;                    // Offset:   64
                //       float unused;                  // Offset:   76
                //
                //   } g_pointLight;                    // Offset:    0 Size:    80
                //   float3 g_eyePos;                   // Offset:   80 Size:    12
                //   float4 g_fogColor;                 // Offset:   96 Size:    16 [unused]
                //   float g_fogStart;                  // Offset:  112 Size:     4 [unused]
                //   float g_fogRange;                  // Offset:  116 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samplerTex                        sampler      NA          NA    0        1
                // g_tex                             texture  float4          2d    0        1
                // g_cubeTex                         texture  float4        cube    1        1
                // PerObject                         cbuffer      NA          NA    0        1
                // PerFrame                          cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SV_POSITION              0   xyzw        1      POS   float       
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TEXCOORD                 0   xy          3     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[6], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texturecube (float,float,float,float) t1
                dcl_input_ps linear v0.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 18
                //
                // Initial variable locations:
                //   v0.x <- pin.posTrans.x; v0.y <- pin.posTrans.y; v0.z <- pin.posTrans.z; 
                //   v1.x <- pin.posH.x; v1.y <- pin.posH.y; v1.z <- pin.posH.z; v1.w <- pin.posH.w; 
                //   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
                //   v3.x <- pin.tex.x; v3.y <- pin.tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 62 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // r0.x <- texColor.x; r0.y <- texColor.y; r0.z <- texColor.z; r0.w <- texColor.w
                
                #line 65
                mov r1.xyz, -v0.xyzx
                add r1.xyz, r1.xyzx, cb1[5].xyzx  // r1.x <- toEye.x; r1.y <- toEye.y; r1.z <- toEye.z
                
                #line 71
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx
                dp3 r1.w, v2.xyzx, v2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, v2.xyzx  // r2.x <- normal.x; r2.y <- normal.y; r2.z <- normal.z
                mov r3.xyz, l(0,0,0,0)  // r3.x <- A.x; r3.y <- A.y; r3.z <- A.z
                mov r4.xyz, l(0,0,0,0)  // r4.x <- D.x; r4.y <- D.y; r4.z <- D.z
                mov r5.xyz, l(0,0,0,0)  // r5.x <- S.x; r5.y <- S.y; r5.z <- S.z
                
                #line 79
                nop 
                mov r6.xyz, cb0[12].xyzx
                mov r7.xyz, cb0[13].xyzx
                mov r8.xyzw, cb0[14].xyzw
                mov r9.xyz, cb1[0].xyzx
                mov r10.xyz, cb1[1].xyzx
                mov r11.xyz, cb1[2].xyzx
                mov r12.xyz, cb1[3].xyzx
                mov r1.w, cb1[3].w
                mov r13.xyz, cb1[4].xyzx
                mov r2.xyz, r2.xyzx
                mov r14.xyz, v0.xyzx
                mov r1.xyz, r1.xyzx
                
                #line 97 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Light.fx"
                mov r15.xyz, l(0,0,0,0)  // r15.x <- ambient.x; r15.y <- ambient.y; r15.z <- ambient.z
                mov r16.xyz, l(0,0,0,0)  // r16.x <- diffuse.x; r16.y <- diffuse.y; r16.z <- diffuse.z
                mov r17.xyz, l(0,0,0,0)  // r17.x <- specular.x; r17.y <- specular.y; r17.z <- specular.z
                
                #line 102
                mov r14.xyz, -r14.xyzx
                add r12.xyz, r12.xyzx, r14.xyzx  // r12.x <- dir.x; r12.y <- dir.y; r12.z <- dir.z
                
                #line 105
                dp3 r2.w, r12.xyzx, r12.xyzx
                sqrt r2.w, r2.w  // r2.w <- dist
                
                #line 108
                lt r1.w, r1.w, r2.w
                
                #line 112
                if_z r1.w
                  div r12.xyz, r12.xyzx, r2.wwww
                
                #line 115
                  itof r1.w, l(1)
                  mul r3.w, r2.w, r13.y
                  add r3.w, r3.w, r13.x
                  mul r4.w, r2.w, r13.z
                  mul r2.w, r2.w, r4.w
                  add r2.w, r2.w, r3.w
                  div r1.w, r1.w, r2.w  // r1.w <- att
                
                #line 118
                  mul r6.xyz, r6.xyzx, r9.xyzx
                  mul r15.xyz, r1.wwww, r6.xyzx
                
                #line 121
                  dp3 r2.w, r12.xyzx, r2.xyzx  // r2.w <- diffFactor
                
                #line 124
                  itof r3.w, l(0)
                  lt r3.w, r3.w, r2.w
                  if_nz r3.w
                
                #line 127
                    mul r6.xyz, r7.xyzx, r10.xyzx
                    mul r6.xyz, r2.wwww, r6.xyzx
                    mul r16.xyz, r1.wwww, r6.xyzx
                    mov r6.xyz, -r12.xyzx
                    dp3 r2.w, r6.xyzx, r2.xyzx
                    add r2.w, r2.w, r2.w
                    mov r2.w, -r2.w
                    mul r7.xyz, r2.wwww, r2.xyzx
                    add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- refLight.x; r6.y <- refLight.y; r6.z <- refLight.z
                    dp3 r2.w, r6.xyzx, r1.xyzx
                    max r2.w, r2.w, l(0.000000)
                    log r2.w, r2.w
                    mul r2.w, r2.w, r8.w
                    exp r2.w, r2.w  // r2.w <- specFactor
                
                #line 134
                    mul r6.xyz, r8.xyzx, r11.xyzx
                    mul r6.xyz, r2.wwww, r6.xyzx
                    mul r17.xyz, r1.wwww, r6.xyzx
                  endif 
                endif 
                
                #line 79 "C:\Users\ashone\Documents\Visual Studio 2015\Projects\D3Dlearning\D3Dlearning\FX\Basic.fx"
                mov r15.xyz, r15.xyzx  // r15.x <- ambient.x; r15.y <- ambient.y; r15.z <- ambient.z
                mov r16.xyz, r16.xyzx  // r16.x <- diff.x; r16.y <- diff.y; r16.z <- diff.z
                mov r17.xyz, r17.xyzx  // r17.x <- spec.x; r17.y <- spec.y; r17.z <- spec.z
                add r3.xyz, r3.xyzx, r15.xyzx
                add r4.xyz, r4.xyzx, r16.xyzx
                add r5.xyz, r5.xyzx, r17.xyzx
                
                #line 90
                add r3.xyz, r3.xyzx, r4.xyzx
                mul r0.xyz, r0.xyzx, r3.xyzx
                add r3.xyz, r5.xyzx, r0.xyzx  // r3.x <- litColor.x; r3.y <- litColor.y; r3.z <- litColor.z
                mul r3.w, r0.w, cb0[13].w  // r3.w <- litColor.w
                
                #line 99
                mov r0.xyz, -r1.xyzx
                dp3 r0.w, r0.xyzx, r2.xyzx
                add r0.w, r0.w, r0.w
                mov r0.w, -r0.w
                mul r1.xyz, r0.wwww, r2.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- ref.x; r0.y <- ref.y; r0.z <- ref.z
                sample_indexable(texturecube)(float,float,float,float) r0.xyzw, r0.xyzx, t1.xyzw, s0  // r0.x <- refColor.x; r0.y <- refColor.y; r0.z <- refColor.z; r0.w <- refColor.w
                mov r1.xyzw, -r3.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw
                mul r0.xyzw, r0.xyzw, l(0.820000, 0.820000, 0.820000, 0.820000)
                add r0.xyzw, r0.xyzw, r3.xyzw  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z; r0.w <- litColor.w
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 90 instruction slots used
                            
            };
        }

    }

}

